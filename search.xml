<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[更换电脑更新博客操作]]></title>
    <url>%2F2021%2F05%2F08%2F%E6%9B%B4%E6%8D%A2%E7%94%B5%E8%84%91%E6%9B%B4%E6%96%B0%E5%8D%9A%E5%AE%A2%E6%93%8D%E4%BD%9C%2F</url>
    <content type="text"><![CDATA[参考文档：廖老师的git教程 更换Windows电脑工作安装git： 1sudo apt-get install git 生成SSH添加到GitHub： 12git config --global user.name &quot;yourname&quot;git config --global user.email &quot;youremail&quot; 检查： 123git config user.namegit config user.emailssh-keygen -t rsa -C &quot;youremail&quot; 一路回车后，找到文件夹下的id_rsa.pub文件，复制到GitHub的setting中，找到SSH keys的设置选项，点击New SSH key检查： 1ssh -T git@github.com 安装node： 1sudo apt-get install nodejs 安装npm： 1sudo apt-get install npm 检查： 12node -vnpm -v 安装hexo： 1npm install -g hexo-cli 新建文件夹后，拉取文件： 1git clone git@github.com:hannnnnah/hannnnnah.github.io.git 然后进入文件夹，就可以使用啦： 12npm installnpm install hexo-deployer-git --save 生成、部署后就可以更新啦： 12hexo ghexo d 创建草稿： 1hexo new draft newpage 预览草稿： 1hexo server --draft 发布草稿： 1hexo publish draft newpage 编辑完后上传： 123git add .git commit –m &quot;xxxx&quot;git push 再次拉取： 1git pull 部署文章： 123hexo cleanhexo generatehexo deploy 更换Mac电脑工作安装git，有三种方法：1、一是安装homebrew，然后通过homebrew安装git（感觉这个比较适合2、二是从App Store安装Xcode，运行后，选择菜单“Xcode”-&gt;“Preferences”，在弹出窗口中找到“Downloads”，选择“Command Line Tools”，点“Install”就可以完成安装了（习惯用jetbrains产品，未尝试第二种3、三是直接在终端输入git -v，即可安装（走了这步，因为还要装node，最后还是装了brew 安装完成后，同前面Windows操作一样，再生成SSH添加到GitHub： 12git config --global user.name &quot;yourname&quot;git config --global user.email &quot;youremail&quot; 检查： 123git config user.namegit config user.emailssh-keygen -t rsa -C &quot;youremail&quot; 一路回车后，找到文件夹下的id_rsa.pub文件，复制到GitHub的setting中，找到SSH keys的设置选项，点击New SSH key添加，找不到的可以”Command+Shift+. “控制文件显隐或者直接搜索：Finder–&gt;前往–&gt;前往文件夹–&gt;输入~/.ssh检查： 1ssh -T git@github.com 之后发现安装node，还是需要homebrew，homebrew官网提供的地址连不上, 知乎找到了对策，来自高赞回答 1/bin/zsh -c &quot;$(curl -fsSL https://gitee.com/cunkai/HomebrewCN/raw/master/Homebrew.sh)&quot; 再使用brew，安装node： 1brew install node 检查： 12node -vnpm -v 安装hexo： 1npm install -g hexo-cli 新建文件夹后，拉取文件： 1git clone git@github.com:hannnnnah/hannnnnah.github.io.git 然后进入文件夹，就可以使用啦： 12npm installnpm install hexo-deployer-git --save 生成、部署后就可以更新啦： 12hexo ghexo d 创建草稿： 1hexo new draft newpage 预览草稿： 1hexo server --draft 发布草稿： 1hexo publish draft newpage 编辑完后上传： 123git add .git commit –m &quot;xxxx&quot;git push 再次拉取： 1git pull 部署文章： 123hexo cleanhexo generatehexo deploy 遇到的问题1、若遇到hexo d失败，node版本太高和hexo不匹配，可安装nvm多版本管理或者指定node@12安装 我是重新安装了node@12： 1brew install node@12 然后添加环境变量，关掉终端再次打开，node版本就降低啦： 1234vim ~/.zshrc# nodeexport PATH=&quot;/usr/local/opt/node@12/bin:$PATH&quot; 2、hexo d之后，样式没了 修改_config.yml文件里的url和root即可]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SQL知识复习（需要注意的点]]></title>
    <url>%2F2021%2F05%2F07%2FSQL%E7%9F%A5%E8%AF%86%E5%A4%8D%E4%B9%A0%EF%BC%88%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%E7%9A%84%E7%82%B9%2F</url>
    <content type="text"><![CDATA[SELECT DISTINCT 语句用于返回唯一不同的值。ORDER BY 关键字用于对结果集按照一个列或者多个列进行排序。默认按照升序对记录进行排序。如果需要按照降序对记录进行排序，可以使用 DESC 关键字。SQL INSERT INTO 语法有两种编写形式。第一种形式无需指定要插入数据的列名，只需提供被插入的值即可： 12INSERT INTO table_nameVALUES (value1,value2,value3,...); 第二种形式需要指定列名及被插入的值： 12INSERT INTO table_name (column1,column2,column3,...)VALUES (value1,value2,value3,...); SQL SELECT TOP, LIMIT, ROWNUM 子句SQL Server / MS Access 语法： 12SELECT TOP number|percent column_name(s)FROM table_name; MySQL 语法： 123SELECT column_name(s)FROM table_nameLIMIT number; Oracle 语法： 123SELECT column_name(s)FROM table_nameWHERE ROWNUM &lt;= number; SQL 通配符_ 通配符：替代一个字符REGEXP/NOT REGEXP/RLIKE/NOT RLIKE ‘^ [charlist]’：字符列中的任何单一字符 12SELECT * FROM WebsitesWHERE name REGEXP &apos;^[A-H]&apos;; REGEXP/NOT REGEXP/RLIKE/NOT RLIKE ‘^ [^charlist]’：不在字符列中的任何单一字符 12SELECT * FROM WebsitesWHERE name REGEXP &apos;^[^A-H]&apos;; CONCAT（）把多列结合在一起在下面的 SQL 语句中，把三个列（url、alexa 和 country）结合在一起，并创建一个名为 “site_info” 的别名 12SELECT name, CONCAT(url, &apos;, &apos;, alexa, &apos;, &apos;, country) AS site_infoFROM Websites; JOIN连接 INNER JOIN ON（INNER JOIN 与 JOIN 是相同的）1234SELECT column_name(s)FROM table1INNER JOIN table2ON table1.column_name=table2.column_name; 或 1234SELECT column_name(s)FROM table1JOIN table2ON table1.column_name=table2.column_name; LEFT JOIN ON（在某些数据库中，LEFT JOIN 称为 LEFT OUTER JOIN）从左表（table1）返回所有的行，即使右表（table2）中没有匹配。如果右表中没有匹配，则结果为 NULL。1234SELECT column_name(s)FROM table1LEFT JOIN table2ON table1.column_name=table2.column_name; 或 1234SELECT column_name(s)FROM table1LEFT OUTER JOIN table2ON table1.column_name=table2.column_name; 3.RIGHT JOIN ON（在某些数据库中，RIGHT JOIN 称为 RIGHT OUTER JOIN）从右表（table2）返回所有的行，即使左表（table1）中没有匹配。如果左表中没有匹配，则结果为 NULL。 1234SELECT column_name(s)FROM table1RIGHT JOIN table2ON table1.column_name=table2.column_name; 或 1234SELECT column_name(s)FROM table1RIGHT OUTER JOIN table2ON table1.column_name=table2.column_name; 4.FULL OUTER JOIN ON（mysql不支持，SQL Server支持 ）只要左表（table1）和右表（table2）其中一个表中存在匹配，则返回行。结合了 LEFT JOIN 和 RIGHT JOIN 的结果。 1234SELECT column_name(s)FROM table1FULL OUTER JOIN table2ON table1.column_name=table2.column_name; UNION合并两个或多个 SELECT 语句的结果，UNION 内部的每个 SELECT 语句必须拥有相同数量的列。列也必须拥有相似的数据类型。同时，每个 SELECT 语句中的列的顺序必须相同。 123SELECT column_name(s) FROM table1UNIONSELECT column_name(s) FROM table2; UNION 操作符选取不同的值。如果允许重复的值，请使用 UNION ALL。 123SELECT column_name(s) FROM table1UNION ALLSELECT column_name(s) FROM table2; SELECT INTO（MySQL 数据库不支持 SELECT … INTO 语句，但支持 INSERT INTO … SELECT）从一个表复制数据，然后把数据插入到另一个新表中。 123SELECT *INTO newtable [IN externaldb]FROM table1; 或者只复制希望的列插入到新表中： 123SELECT column_name(s)INTO newtable [IN externaldb]FROM table1; 或者拷贝表结构及数据： 123CREATE TABLE 新表ASSELECT * FROM 旧表 INSERT INTO SELECT从一个表复制数据，然后把数据插入到一个已存在的表中。 12INSERT INTO table2SELECT * FROM table1; 或者只复制希望的列插入到另一个已存在的表中： 1234INSERT INTO table2(column_name(s))SELECT column_name(s)FROM table1; SQL约束1.NOT NULL 12ALTER TABLE Persons MODIFY Age int NOT NULL;ALTER TABLE Persons MODIFY Age int NULL; 2.UNIQUE 1234ALTER TABLE Persons ADD UNIQUE (P_Id);ALTER TABLE Persons ADD CONSTRAINT uc_PersonID UNIQUE (P_Id,LastName);ALTER TABLE Persons DROP INDEX uc_PersonID;ALTER TABLE Persons DROP CONSTRAINT uc_PersonID; 3.PRIMARY KEY 1234ALTER TABLE Persons ADD PRIMARY KEY (P_Id);ALTER TABLE Persons ADD CONSTRAINT pk_PersonID PRIMARY KEY (P_Id,LastName);ALTER TABLE Persons DROP PRIMARY KEY;ALTER TABLE Persons DROP CONSTRAINT pk_PersonID; 4.FOREIGN KEY，指向另一个表中的 UNIQUE KEY 1234ALTER TABLE Orders ADD FOREIGN KEY (P_Id) REFERENCES Persons(P_Id);ALTER TABLE Orders ADD CONSTRAINT fk_PerOrders FOREIGN KEY (P_Id) REFERENCES Persons(P_Id);ALTER TABLE Orders DROP FOREIGN KEY fk_PerOrders;ALTER TABLE Orders DROP CONSTRAINT fk_PerOrders; 5.CHECK 1234ALTER TABLE Persons ADD CHECK (P_Id&gt;0);ALTER TABLE Persons ADD CONSTRAINT chk_Person CHECK (P_Id&gt;0 AND City=&apos;Sandnes&apos;);ALTER TABLE Persons DROP CONSTRAINT chk_Person;ALTER TABLE Persons DROP CHECK chk_Person; 6.DEFAULT 12345ALTER TABLE Persons ALTER City SET DEFAULT &apos;SANDNES&apos;;ALTER TABLE Persons ADD CONSTRAINT ab_c DEFAULT &apos;SANDNES&apos; for City;ALTER TABLE Persons MODIFY City DEFAULT &apos;SANDNES&apos;;ALTER TABLE Persons ALTER City DROP DEFAULT;ALTER TABLE Persons ALTER COLUMN City DROP DEFAULT; DROP删除表结构，TRUNCATE删除表内容，空间恢复到初始大小，而DELETE不会减少表或索引所占的空间12DROP TABLE table_name;TRUNCATE TABLE table_name; NULL值赋为01234SELECT ProductName,UnitPrice*(UnitsInStock+ISNULL(UnitsOnOrder,0)) FROM Products;SELECT ProductName,UnitPrice*(UnitsInStock+NVL(UnitsOnOrder,0)) FROM Products;SELECT ProductName,UnitPrice*(UnitsInStock+IFNULL(UnitsOnOrder,0)) FROM Products;SELECT ProductName,UnitPrice*(UnitsInStock+COALESCE(UnitsOnOrder,0)) FROM Products;]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>SQL知识点</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo初步学习]]></title>
    <url>%2F2019%2F07%2F01%2Fhexo%E5%88%9D%E6%AD%A5%E5%AD%A6%E4%B9%A0%2F</url>
    <content type="text"><![CDATA[参考文档： 1、hexo中文文档 2、https://blog.csdn.net/sinat_37781304/article/details/82729029 hexo部署到github1、安装git 2、安装nodejs 3、用 npm 安装话经常出现卡住而导致无法正常安装，解决办法就是修改 npm 的安装源，这里选择淘宝 NPM 镜像，这是一个完整 npmjs.org 镜像，你可以用此代替官方版本，同步频率目前为 10分钟 一次以保证尽量与官方服务同步。 1npm config set registry https://registry.npm.taobao.org 4、安装hexo 1npm install -g hexo-cli 5、查看版本信息 1hexo -v 6、初始化hexo程序 1hexo init myblog （更新npm/并更换为国内的npm镜像命令：npm install npm -g/npm install -g cnpm –registry=https://registry.npm.taobao.org） 7、进入myblog文件夹 1cd myblog 8、 1npm install 9、查看文件夹目录 node_modules: 依赖包 scaffolds：生成文章的一些模板 source：用来存放你的文章 themes：主题 _config.yml: 博客的配置文件 10、打开hexo 12hexo ghexo server 11、创建以用于提交 12git config --global user.name &quot;yourname&quot;git config --global user.email &quot;youremail&quot; 12、连接公钥 1ssh-keygen -t rsa -C &quot;email&quot; 13、查看是否成功 1ssh -T git@github.com （You’ve successfully authenticated, but GitHub does not provide shell access.） 14、将hexo和GitHub关联起来，修改配置文件_config.yml 1234deploy: type: （中间有个空格，以下相同）git repo: https://github.com/YourgithubName/YourgithubName.github.io.git branch: master 15、安装deploy-git部署命令 1npm install hexo-deployer-git --save 16、清除之前生成的东西 1hexo clean 17、生成静态文章 1hexo generate/hexo g 18、部署文章 1hexo deploy/hexo d 19、github中要新建一个仓库用户名+github.io，访问用户名.github.io即可 设置hexo主题1、选择hexo主题，到github上下载主题放到themes文件夹下2、修改_config.yml里的theme为该文件夹名称 新增菜单栏选项1、添加新页面：hexo new page “xx”2、在主题配置文件的menu中加上该页面3、在zh-CN.yml文件中加上中文意思 新增草稿1、添加草稿：hexo new draft “xx”2、预览草稿：hexo server –draft3、发布草稿：hexo publish draft “xx” 搜索1、npm install hexo-generator-searchdb –save2、站点配置文件的扩展下添加 12345search: path: search.xml field: post format: html limit: 10000 3、主题配置文件下，local_search改成true即可 12local_search: enable: true 字数1、npm install hexo-symbols-count-time –save2、站点配置 12345symbols_count_time: symbols: true time: true total_symbols: true total_time: true 宠物1、npm install –save hexo-helper-live2d2、live2d插件3、安装合适的宠物npm install live2d-widget-model-wanko4、在配置文件中添加即可 1234567891011121314151617181920live2d: enable: true scriptFrom: local pluginRootPath: live2dw/ pluginJsPath: lib/ pluginModelPath: assets/ model:# use: live2d-widget-model-tororo# use: live2d-widget-model-hijiki use: live2d-widget-model-wanko display: position: right width: 150 height: 300# 水平位置# hOffset: 0# 垂直位置# vOffset: -20 mobile: show: true 点击弹爱心1、在source-&gt;js目录下新建一个js文件为click-love.js 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950! function (e, t, a) &#123; function n() &#123; c(&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &apos;&apos;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;), o(), r() &#125; function r() &#123; for (var e = 0; e &lt; d.length; e++) d[e].alpha &lt;= 0 ? (t.body.removeChild(d[e].el), d.splice(e, 1)) : (d[e].y--, d[e].scale += .004, d[e].alpha -= .013, d[e].el.style.cssText = &quot;left:&quot; + d[e].x + &quot;px;top:&quot; + d[e].y + &quot;px;opacity:&quot; + d[e].alpha + &quot;;transform:scale(&quot; + d[e].scale + &quot;,&quot; + d[e].scale + &quot;) rotate(45deg);background:&quot; + d[e].color + &quot;;z-index:99999&quot;); requestAnimationFrame(r) &#125; function o() &#123; var t = &quot;function&quot; == typeof e.onclick &amp;&amp; e.onclick; e.onclick = function (e) &#123; t &amp;&amp; t(), i(e) &#125; &#125; function i(e) &#123; var a = t.createElement(&quot;div&quot;); a.className = &quot;heart&quot;, d.push(&#123; el: a, x: e.clientX - 5, y: e.clientY - 5, scale: 1, alpha: 1, color: s() &#125;), t.body.appendChild(a) &#125; function c(e) &#123; var a = t.createElement(&quot;style&quot;); a.type = &quot;text/css&quot;; try &#123; a.appendChild(t.createTextNode(e)) &#125; catch (t) &#123; a.styleSheet.cssText = e &#125; t.getElementsByTagName(&quot;head&quot;)[0].appendChild(a) &#125; function s() &#123; return &quot;rgb(&quot; + ~~(255 * Math.random()) + &quot;,&quot; + ~~(255 * Math.random()) + &quot;,&quot; + ~~(255 * Math.random()) + &quot;)&quot; &#125; var d = []; e.requestAnimationFrame = function () &#123; return e.requestAnimationFrame || e.webkitRequestAnimationFrame || e.mozRequestAnimationFrame || e.oRequestAnimationFrame || e.msRequestAnimationFrame || function (e) &#123; setTimeout(e, 1e3 / 60) &#125; &#125;(), n()&#125;(window, document); 2、在主题theme-&gt;layout-&gt;_partials-&gt;footer文件中导入该js文件即可 1&lt;script type=&quot;text/javascript&quot; src=&quot;/js/click-love.js&quot;&gt;&lt;/script&gt;]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
</search>
